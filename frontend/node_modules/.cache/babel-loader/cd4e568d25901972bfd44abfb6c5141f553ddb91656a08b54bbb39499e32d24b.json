{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/test backend/frontend/src/components/QuizApp/QuizPage/QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { quizData } from '../QuizData/QuizData';\nimport { Typography, Button, CircularProgress, Container, Grid, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    topic,\n    difficulty,\n    quizIndex\n  } = useParams();\n  const quiz = quizData[topic][difficulty][quizIndex];\n\n  // State variables\n  const [answers, setAnswers] = useState(new Array(quiz.questions.length).fill(''));\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes (300 seconds) timer\n  const [selectedAnswers, setSelectedAnswers] = useState(new Array(quiz.questions.length).fill(null)); // Track selected answers for coloring\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n      }\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n  const handleOptionSelect = (option, index) => {\n    setSelectedAnswers([...selectedAnswers].fill(null, 0, index)); // Reset previous selections\n    setSelectedAnswers([...selectedAnswers].slice(0, index), option, ...selectedAnswers.slice(index + 1));\n    setAnswers([...answers].slice(0, index), option, ...answers.slice(index + 1)); // Update main answers array\n  };\n  const handleSubmit = () => {\n    // Calculate score or perform other actions\n    console.log('Submitted Answers:', answers);\n\n    // You can navigate to a result page or display the score here\n  };\n  const renderOptions = () => {\n    const correctAnswer = quiz.questions[currentIndex].correctAnswer; // Access correct answer efficiently\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: quiz.questions[currentIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), quiz.questions[currentIndex].options.map((option, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color:\n          // Apply color logic based on selection and correctness\n          selectedAnswers[idx] === option ? selectedAnswers[idx] === correctAnswer ? 'success' : 'error' : 'primary',\n          onClick: () => handleOptionSelect(option, idx),\n          disabled: selectedAnswers[currentIndex] !== null // Disable options if a choice is already made\n          ,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '2rem',\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        gutterBottom: true,\n        children: [\"Time Left: \", Math.floor(timeLeft / 60), \":\", (timeLeft % 60).toLocaleString('en-US', {\n          minimumIntegerDigits: 2\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '2rem'\n        },\n        children: renderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setCurrentIndex(currentIndex + 1),\n          disabled: currentIndex === quiz.questions.length - 1 || selectedAnswers[currentIndex] === null // Disable next if no option selected\n          ,\n          children: currentIndex === quiz.questions.length - 1 ? 'Submit' : 'Next Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), currentIndex === quiz.questions.length && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"b6cgdiFa6/1WGzZNc5KFWfb3Vp8=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","quizData","Typography","Button","CircularProgress","Container","Grid","Paper","jsxDEV","_jsxDEV","QuizPage","_s","topic","difficulty","quizIndex","quiz","answers","setAnswers","Array","questions","length","fill","currentIndex","setCurrentIndex","timeLeft","setTimeLeft","selectedAnswers","setSelectedAnswers","timer","setTimeout","clearTimeout","handleOptionSelect","option","index","slice","handleSubmit","console","log","renderOptions","correctAnswer","container","spacing","direction","children","item","variant","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","idx","color","onClick","disabled","maxWidth","style","marginTop","padding","marginBottom","align","gutterBottom","title","Math","floor","toLocaleString","minimumIntegerDigits","justifyContent","_c","$RefreshReg$"],"sources":["/Users/a1/Desktop/test backend/frontend/src/components/QuizApp/QuizPage/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { quizData } from '../QuizData/QuizData';\nimport { Typography, Button, CircularProgress, Container, Grid, Paper } from '@mui/material';\n\nconst QuizPage = () => {\n  const { topic, difficulty, quizIndex } = useParams();\n  const quiz = quizData[topic][difficulty][quizIndex];\n\n  // State variables\n  const [answers, setAnswers] = useState(new Array(quiz.questions.length).fill(''));\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes (300 seconds) timer\n  const [selectedAnswers, setSelectedAnswers] = useState(new Array(quiz.questions.length).fill(null)); // Track selected answers for coloring\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n      }\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n\n  const handleOptionSelect = (option, index) => {\n    setSelectedAnswers([...selectedAnswers].fill(null, 0, index)); // Reset previous selections\n    setSelectedAnswers([...selectedAnswers].slice(0, index), option, ...selectedAnswers.slice(index + 1));\n    setAnswers([...answers].slice(0, index), option, ...answers.slice(index + 1)); // Update main answers array\n  };\n\n  const handleSubmit = () => {\n    // Calculate score or perform other actions\n    console.log('Submitted Answers:', answers);\n\n    // You can navigate to a result page or display the score here\n  };\n\n  const renderOptions = () => {\n    const correctAnswer = quiz.questions[currentIndex].correctAnswer; // Access correct answer efficiently\n\n    return (\n      <Grid container spacing={2} direction=\"column\">\n        <Grid item>\n          <Typography variant=\"h6\">{quiz.questions[currentIndex].question}</Typography>\n        </Grid>\n        {quiz.questions[currentIndex].options.map((option, idx) => (\n          <Grid item key={idx}>\n            <Button\n              variant=\"contained\"\n              color={\n                // Apply color logic based on selection and correctness\n                selectedAnswers[idx] === option\n                  ? (selectedAnswers[idx] === correctAnswer ? 'success' : 'error')\n                  : 'primary'\n              }\n              onClick={() => handleOptionSelect(option, idx)}\n              disabled={selectedAnswers[currentIndex] !== null} // Disable options if a choice is already made\n            >\n              {option}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"sm\" style={{ marginTop: '2rem' }}>\n      <Paper style={{ padding: '2rem', marginBottom: '2rem' }}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>{quiz.title}</Typography>\n        <Typography variant=\"body1\" align=\"center\" gutterBottom>Time Left: {Math.floor(timeLeft / 60)}:{(timeLeft % 60).toLocaleString('en-US', { minimumIntegerDigits: 2 })}</Typography>\n        <div style={{ marginBottom: '2rem' }}>\n          {renderOptions()}\n        </div>\n        <Grid container justifyContent=\"center\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setCurrentIndex(currentIndex + 1)}\n            disabled={currentIndex === quiz.questions.length - 1 || selectedAnswers[currentIndex] === null} // Disable next if no option selected\n          >\n            {currentIndex === quiz.questions.length - 1 ? 'Submit' : 'Next Question'}\n          </Button>\n        </Grid>\n      </Paper>\n      {currentIndex === quiz.questions.length && (\n        <Paper style={{ padding: '2rem' }}>\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>Quiz Completed!</Typography>\n          {/* Render result or score here */}\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit Answers</Button>\n        </Paper>\n      )}\n    </Container>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}