{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/test backend/frontend/src/components/QuizApp/QuizPage/QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { quizData } from '../QuizData/QuizData';\nimport { Typography, Button, CircularProgress, Container, Grid, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    topic,\n    difficulty,\n    quizIndex\n  } = useParams();\n  const quiz = quizData[topic][difficulty][quizIndex];\n  const [answers, setAnswers] = useState(new Array(quiz.questions.length).fill('')); // Array to store user answers\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes (300 seconds) timer\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n      }\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n  const handleOptionSelect = option => {\n    const newAnswers = [...answers];\n    newAnswers[currentIndex] = option;\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = () => {\n    // Calculate score or perform other actions\n    console.log('Submitted Answers:', answers);\n    // You can navigate to a result page or display the score here\n  };\n  const renderOptions = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: quiz.questions[currentIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), quiz.questions[currentIndex].options.map((option, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => handleOptionSelect(option),\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '2rem',\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        gutterBottom: true,\n        children: [\"Time Left: \", Math.floor(timeLeft / 60), \":\", (timeLeft % 60).toLocaleString('en-US', {\n          minimumIntegerDigits: 2\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '2rem'\n        },\n        children: renderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setCurrentIndex(currentIndex + 1),\n          disabled: currentIndex === quiz.questions.length - 1,\n          children: currentIndex === quiz.questions.length - 1 ? 'Submit' : 'Next Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), currentIndex === quiz.questions.length && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"q0piSQIZkXz/SoSYbIwHxqJkoHE=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","quizData","Typography","Button","CircularProgress","Container","Grid","Paper","jsxDEV","_jsxDEV","QuizPage","_s","topic","difficulty","quizIndex","quiz","answers","setAnswers","Array","questions","length","fill","currentIndex","setCurrentIndex","timeLeft","setTimeLeft","timer","setTimeout","clearTimeout","handleOptionSelect","option","newAnswers","handleSubmit","console","log","renderOptions","container","spacing","direction","children","item","variant","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","idx","onClick","maxWidth","style","marginTop","padding","marginBottom","align","gutterBottom","title","Math","floor","toLocaleString","minimumIntegerDigits","justifyContent","color","disabled","_c","$RefreshReg$"],"sources":["/Users/a1/Desktop/test backend/frontend/src/components/QuizApp/QuizPage/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { quizData } from '../QuizData/QuizData';\nimport { Typography, Button, CircularProgress, Container, Grid, Paper } from '@mui/material';\n\nconst QuizPage = () => {\n  const { topic, difficulty, quizIndex } = useParams();\n  const quiz = quizData[topic][difficulty][quizIndex];\n  const [answers, setAnswers] = useState(new Array(quiz.questions.length).fill('')); // Array to store user answers\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes (300 seconds) timer\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n      }\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n\n  const handleOptionSelect = (option) => {\n    const newAnswers = [...answers];\n    newAnswers[currentIndex] = option;\n    setAnswers(newAnswers);\n  };\n\n  const handleSubmit = () => {\n    // Calculate score or perform other actions\n    console.log('Submitted Answers:', answers);\n    // You can navigate to a result page or display the score here\n  };\n\n  const renderOptions = () => {\n    return (\n      <Grid container spacing={2} direction=\"column\">\n        <Grid item>\n          <Typography variant=\"h6\">{quiz.questions[currentIndex].question}</Typography>\n        </Grid>\n        {quiz.questions[currentIndex].options.map((option, idx) => (\n          <Grid item key={idx}>\n            <Button variant=\"contained\" onClick={() => handleOptionSelect(option)}>\n              {option}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"sm\" style={{ marginTop: '2rem' }}>\n      <Paper style={{ padding: '2rem', marginBottom: '2rem' }}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>{quiz.title}</Typography>\n        <Typography variant=\"body1\" align=\"center\" gutterBottom>Time Left: {Math.floor(timeLeft / 60)}:{(timeLeft % 60).toLocaleString('en-US', { minimumIntegerDigits: 2 })}</Typography>\n        <div style={{ marginBottom: '2rem' }}>\n          {renderOptions()}\n        </div>\n        <Grid container justifyContent=\"center\">\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setCurrentIndex(currentIndex + 1)} disabled={currentIndex === quiz.questions.length - 1}>\n            {currentIndex === quiz.questions.length - 1 ? 'Submit' : 'Next Question'}\n          </Button>\n        </Grid>\n      </Paper>\n      {currentIndex === quiz.questions.length && (\n        <Paper style={{ padding: '2rem' }}>\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>Quiz Completed!</Typography>\n          {/* Render result or score here */}\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit Answers</Button>\n        </Paper>\n      )}\n    </Container>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}