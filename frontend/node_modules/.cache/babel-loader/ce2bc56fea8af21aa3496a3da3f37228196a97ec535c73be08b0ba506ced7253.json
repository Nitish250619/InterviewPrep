{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/test backend/frontend/src/components/SignUpPage/SignUpPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Simulate signup logic (replace with your actual validation and backend interaction)\n    if (password !== confirmPassword) {\n      alert('Passwords do not match!');\n      return;\n    }\n    console.log('Name:', name);\n    console.log('Email:', email);\n    console.log('Password:', password);\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Name\",\n      variant: \"outlined\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true,\n      margin: \"normal\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      variant: \"outlined\",\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true,\n      margin: \"normal\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      variant: \"outlined\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true,\n      margin: \"normal\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Confirm Password\",\n      variant: \"outlined\",\n      type: \"password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true,\n      margin: \"normal\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpPage, \"NYiFi2C6DAgt8oizGdr79b3ECNU=\");\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","TextField","Button","jsxDEV","_jsxDEV","SignUpPage","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","event","preventDefault","alert","console","log","onSubmit","children","label","variant","value","onChange","e","target","required","margin","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","color","_c","$RefreshReg$"],"sources":["/Users/a1/Desktop/test backend/frontend/src/components/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst SignUpPage = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Simulate signup logic (replace with your actual validation and backend interaction)\n    if (password !== confirmPassword) {\n      alert('Passwords do not match!');\n      return;\n    }\n    console.log('Name:', name);\n    console.log('Email:', email);\n    console.log('Password:', password);\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        required\n        margin=\"normal\"\n        fullWidth\n      />\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        required\n        margin=\"normal\"\n        fullWidth\n      />\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        required\n        margin=\"normal\"\nfullWidth\n      />\n      <TextField\n        label=\"Confirm Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        value={confirmPassword}\n        onChange={(e) => setConfirmPassword(e.target.value)}\n        required\n        margin=\"normal\"\n        fullWidth\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n        Signup\n      </Button>\n    </form>\n  );\n};\n\nexport default SignUpPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}