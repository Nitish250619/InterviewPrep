{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/test backend/frontend/src/components/QuizApp/QuizPage/QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { quizData } from '../QuizData/QuizData';\nimport { Typography, Button, Container, Grid, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    topic,\n    difficulty,\n    quizIndex\n  } = useParams();\n  const quiz = quizData[topic][difficulty][quizIndex];\n  const [answers, setAnswers] = useState(new Array(quiz.questions.length).fill('')); // Array to store user answers\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes (300 seconds) timer\n  const [selectedOptions, setSelectedOptions] = useState(new Array(quiz.questions.length).fill('')); // Track selected option for each question\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n      }\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n  const handleOptionSelect = option => {\n    const newAnswers = [...answers];\n    newAnswers[currentIndex] = option;\n    setAnswers(newAnswers);\n    const newSelectedOptions = [...selectedOptions];\n    newSelectedOptions[currentIndex] = option;\n    setSelectedOptions(newSelectedOptions);\n  };\n  const handleSubmit = () => {\n    // Calculate score or perform other actions\n    console.log('Submitted Answers:', answers);\n    // You can navigate to a result page or display the score here\n  };\n  const renderOptions = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: quiz.questions[currentIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), quiz.questions[currentIndex].options.map((option, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => handleOptionSelect(option),\n          style: {\n            backgroundColor: selectedOptions[currentIndex] === option ? option === quiz.questions[currentIndex].answer ? 'green' : 'red' : 'default',\n            color: selectedOptions[currentIndex] === option ? 'white' : 'default'\n          },\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '2rem',\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        gutterBottom: true,\n        children: [\"Time Left: \", Math.floor(timeLeft / 60), \":\", (timeLeft % 60).toLocaleString('en-US', {\n          minimumIntegerDigits: 2\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '2rem'\n        },\n        children: renderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: currentIndex < quiz.questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setCurrentIndex(currentIndex + 1),\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), currentIndex === quiz.questions.length && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"7LCjj0X6GZlk3s4iRi1bz/nCTRY=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","quizData","Typography","Button","Container","Grid","Paper","jsxDEV","_jsxDEV","QuizPage","_s","topic","difficulty","quizIndex","quiz","answers","setAnswers","Array","questions","length","fill","currentIndex","setCurrentIndex","timeLeft","setTimeLeft","selectedOptions","setSelectedOptions","timer","setTimeout","clearTimeout","handleOptionSelect","option","newAnswers","newSelectedOptions","handleSubmit","console","log","renderOptions","container","spacing","direction","children","item","variant","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","idx","onClick","style","backgroundColor","answer","color","maxWidth","marginTop","padding","marginBottom","align","gutterBottom","title","Math","floor","toLocaleString","minimumIntegerDigits","justifyContent","_c","$RefreshReg$"],"sources":["/Users/a1/Desktop/test backend/frontend/src/components/QuizApp/QuizPage/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { quizData } from '../QuizData/QuizData';\nimport { Typography, Button, Container, Grid, Paper } from '@mui/material';\n\nconst QuizPage = () => {\n  const { topic, difficulty, quizIndex } = useParams();\n  const quiz = quizData[topic][difficulty][quizIndex];\n  const [answers, setAnswers] = useState(new Array(quiz.questions.length).fill('')); // Array to store user answers\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes (300 seconds) timer\n  const [selectedOptions, setSelectedOptions] = useState(new Array(quiz.questions.length).fill('')); // Track selected option for each question\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n      }\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n\n  const handleOptionSelect = (option) => {\n    const newAnswers = [...answers];\n    newAnswers[currentIndex] = option;\n    setAnswers(newAnswers);\n\n    const newSelectedOptions = [...selectedOptions];\n    newSelectedOptions[currentIndex] = option;\n    setSelectedOptions(newSelectedOptions);\n  };\n\n  const handleSubmit = () => {\n    // Calculate score or perform other actions\n    console.log('Submitted Answers:', answers);\n    // You can navigate to a result page or display the score here\n  };\n\n  const renderOptions = () => {\n    return (\n      <Grid container spacing={2} direction=\"column\">\n        <Grid item>\n          <Typography variant=\"h6\">{quiz.questions[currentIndex].question}</Typography>\n        </Grid>\n        {quiz.questions[currentIndex].options.map((option, idx) => (\n          <Grid item key={idx}>\n            <Button\n              variant=\"contained\"\n              onClick={() => handleOptionSelect(option)}\n              style={{\n                backgroundColor:\n                  selectedOptions[currentIndex] === option\n                    ? option === quiz.questions[currentIndex].answer\n                      ? 'green'\n                      : 'red'\n                    : 'default',\n                color: selectedOptions[currentIndex] === option ? 'white' : 'default',\n              }}\n            >\n              {option}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"sm\" style={{ marginTop: '2rem' }}>\n      <Paper style={{ padding: '2rem', marginBottom: '2rem' }}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>{quiz.title}</Typography>\n        <Typography variant=\"body1\" align=\"center\" gutterBottom>Time Left: {Math.floor(timeLeft / 60)}:{(timeLeft % 60).toLocaleString('en-US', { minimumIntegerDigits: 2 })}</Typography>\n        <div style={{ marginBottom: '2rem' }}>\n          {renderOptions()}\n        </div>\n        <Grid container justifyContent=\"center\">\n          {currentIndex < quiz.questions.length - 1 ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setCurrentIndex(currentIndex + 1)}\n            >\n              Next Question\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </Button>\n          )}\n        </Grid>\n      </Paper>\n      {currentIndex === quiz.questions.length && (\n        <Paper style={{ padding: '2rem' }}>\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>Quiz Completed!</Typography>\n          {/* Render result or score here */}\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit Answers</Button>\n        </Paper>\n      )}\n    </Container>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}