{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/test backend/frontend/src/components/ProtectedRoutes/ProtectedRoutes.jsx\",\n  _s = $RefreshSig$();\n// src/ProtectedRoute.js\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        await axios.get('http://localhost:8082/auth/protected', {\n          withCredentials: true\n        });\n        setIsAuthenticated(true);\n      } catch (error) {\n        setIsAuthenticated(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this); // You can replace this with a loading spinner\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 39\n  }, this);\n};\n_s(ProtectedRoute, \"ZTMIcZ3KFUL4S6fmpEYhW5p5Z1I=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","axios","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","setIsAuthenticated","checkAuth","get","withCredentials","error","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/a1/Desktop/test backend/frontend/src/components/ProtectedRoutes/ProtectedRoutes.jsx"],"sourcesContent":["// src/ProtectedRoute.js\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ProtectedRoute = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        await axios.get('http://localhost:8082/auth/protected', { withCredentials: true });\n        setIsAuthenticated(true);\n      } catch (error) {\n        setIsAuthenticated(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  if (isAuthenticated === null) {\n    return <div>Loading...</div>; // You can replace this with a loading spinner\n  }\n\n  return isAuthenticated ? children : <Navigate to=\"/\" />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMR,KAAK,CAACS,GAAG,CAAC,sCAAsC,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QAClFH,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdJ,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,eAAe,KAAK,IAAI,EAAE;IAC5B,oBAAOJ,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOT,eAAe,GAAGF,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACiB,EAAE,EAAC;EAAG;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAACV,EAAA,CArBIF,cAAc;AAAAc,EAAA,GAAdd,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}